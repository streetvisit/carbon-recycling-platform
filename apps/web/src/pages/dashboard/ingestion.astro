---
import DashboardLayout from '../../layouts/DashboardLayout.astro';
import DataSourceList from '../../components/DataSourceList.tsx';
import AddDataSourceModal from '../../components/AddDataSourceModal.tsx';

// TODO: Authentication is currently handled client-side by Clerk
// This page will properly require authentication once Clerk middleware is configured
// For now, the page loads but components will show auth requirements
---

<DashboardLayout 
  title="Data Ingestion Hub" 
  description="Connect and manage your carbon data sources"
  currentPage="ingestion"
>
  <!-- Authentication Loading State -->
  <div id="auth-loading" class="flex items-center justify-center py-12">
    <div class="text-center">
      <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-green-600 mb-4"></div>
      <p class="text-gray-600">Checking authentication...</p>
    </div>
  </div>

  <!-- Main Content (Hidden until auth check completes) -->
  <div id="main-content" class="space-y-8" style="display: none;">
    <!-- Action Button -->
    <div class="flex justify-end">
      <button 
        id="add-datasource-btn"
        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors"
      >
        <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
        </svg>
        Add New Data Source
      </button>
    </div>

    <!-- Data Sources List -->
    <DataSourceList client:load />
  </div>

  <!-- Add Data Source Modal -->
  <div id="modal-container">
    <!-- Modal will be rendered here by client-side JavaScript -->
  </div>

  <script>
    // Handle authentication check and content display
    document.addEventListener('DOMContentLoaded', () => {
      const authLoading = document.getElementById('auth-loading');
      const mainContent = document.getElementById('main-content');
      
      // For static build: simulate auth check
      // In production, this would check actual Clerk auth state
      const checkAuth = async () => {
        try {
          // Check if we have a valid session (mock for now)
          // In production, this would use Clerk's client-side API
          await new Promise(resolve => setTimeout(resolve, 500)); // Simulate API check
          
          // For development: always show content
          // In production with Clerk: check actual auth state
          const isAuthenticated = true; // Replace with: window.Clerk?.user !== null
          
          if (isAuthenticated) {
            // Show main content
            authLoading!.style.display = 'none';
            mainContent!.style.display = 'block';
            
            // Initialize add button handler
            const addBtn = document.getElementById('add-datasource-btn');
            let modalOpen = false;
            
            addBtn?.addEventListener('click', () => {
              if (!modalOpen) {
                modalOpen = true;
                console.log('Opening add data source modal');
                alert('Add Data Source modal would open here - this will be properly integrated with the component.');
                modalOpen = false;
              }
            });
          } else {
            // Redirect to sign-in
            window.location.href = '/sign-in?redirect=' + encodeURIComponent(window.location.pathname);
          }
        } catch (error) {
          console.error('Auth check failed:', error);
          // For development: show content anyway
          authLoading!.style.display = 'none';
          mainContent!.style.display = 'block';
        }
      };
      
      // Run auth check
      checkAuth();
    });
  </script>
</DashboardLayout>
