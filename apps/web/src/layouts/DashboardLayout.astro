---
import Layout from './Layout.astro';
import NavigationMenu from '../components/NavigationMenu.tsx';

export interface Props {
  title: string;
  description?: string;
  currentPage?: 'dashboard' | 'analytics' | 'ingestion' | 'trading';
}

const { title, description, currentPage } = Astro.props;

const pages = [
  { id: 'dashboard', name: 'Overview', href: '/dashboard' },
  { id: 'ingestion', name: 'Data Ingestion', href: '/dashboard/ingestion' },
  { id: 'analytics', name: 'Analytics', href: '/dashboard/analytics' },
  { id: 'trading', name: 'Trading', href: '/trading' }
];
---

<Layout title={title}>
  <NavigationMenu client:load />
  <div class="min-h-screen bg-gray-50">
    <!-- Unified Dashboard Header -->
    <header class="bg-white shadow-sm border-b border-gray-200 sticky top-0 z-40">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-6">
          <!-- Page Title & Description -->
          <div>
            <h1 class="text-3xl font-bold text-gray-900">{title}</h1>
            {description && (
              <p class="mt-2 text-sm text-gray-600">{description}</p>
            )}
          </div>

          <!-- Navigation Menu -->
          <nav class="flex items-center space-x-8">
            {pages.map(page => (
              <a 
                href={page.href}
                class={`text-sm font-medium transition-colors ${
                  currentPage === page.id 
                    ? 'text-green-600 border-b-2 border-green-600 pb-1' 
                    : 'text-gray-700 hover:text-gray-900'
                }`}
              >
                {page.name}
              </a>
            ))}
            
            <!-- User Menu -->
            <div class="flex items-center space-x-4 ml-8 pl-8 border-l border-gray-200">
              <div class="relative">
                <button 
                  id="user-menu-button"
                  class="flex items-center space-x-2 text-sm font-medium text-gray-700 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 rounded-md px-2 py-1"
                  aria-expanded="false"
                  aria-haspopup="true"
                >
                  <div class="w-8 h-8 bg-green-600 rounded-full flex items-center justify-center">
                    <span class="text-white text-sm font-medium">U</span>
                  </div>
                  <span>Account</span>
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width={2} d="M19 9l-7 7-7-7" />
                  </svg>
                </button>

                <!-- Dropdown Menu (hidden by default) -->
                <div 
                  id="user-menu"
                  class="absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none hidden"
                  role="menu"
                  aria-orientation="vertical"
                  aria-labelledby="user-menu-button"
                >
                  <div class="py-1">
                    <a href="/dashboard/profile" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem">
                      Profile Settings
                    </a>
                    <a href="/dashboard/billing" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100" role="menuitem">
                      Billing
                    </a>
                    <div class="border-t border-gray-100"></div>
                    <button id="logout-btn" class="block w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50" role="menuitem">
                      Sign Out
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </nav>
        </div>
      </div>
    </header>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
      <slot />
    </main>
  </div>

  <!-- JavaScript for dropdown functionality -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const userMenuButton = document.getElementById('user-menu-button');
      const userMenu = document.getElementById('user-menu');
      const logoutBtn = document.getElementById('logout-btn');

      // Toggle dropdown menu
      userMenuButton?.addEventListener('click', (e) => {
        e.stopPropagation();
        userMenu?.classList.toggle('hidden');
        userMenuButton.setAttribute('aria-expanded', userMenu?.classList.contains('hidden') ? 'false' : 'true');
      });

      // Close dropdown when clicking outside
      document.addEventListener('click', () => {
        if (!userMenu?.classList.contains('hidden')) {
          userMenu?.classList.add('hidden');
          userMenuButton?.setAttribute('aria-expanded', 'false');
        }
      });

      // Handle logout
      logoutBtn?.addEventListener('click', async () => {
        try {
          // Try to use Clerk's sign out if available
          if (window.Clerk) {
            await window.Clerk.signOut();
          }
        } catch (error) {
          console.warn('Clerk sign out failed:', error);
        }
        
        // Clear local storage and redirect
        localStorage.clear();
        sessionStorage.clear();
        window.location.href = '/';
      });
    });
  </script>
</Layout>